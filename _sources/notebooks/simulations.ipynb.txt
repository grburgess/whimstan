{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "c22595b7",
   "metadata": {},
   "source": [
    "# Simulations\n",
    "\n",
    "While `whimstan` is a primarily an interface to various Bayesian hierarchical models for fitting the afterglow spectra of GRBs, it also provides some capabilities to simulate individual XRT spectra from population distributions. We leverage the capabilities of [popsynth](https://popsynth.readthedocs.io/en/latest/) to generate the population parameters and then use [3ml](https://threeml.readthedocs.io/en/stable/) to fold synthesized spectra through the response of XRT.\n",
    "\n",
    "All of this complexity is handled with a few simple routines.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b8331593",
   "metadata": {
    "tags": []
   },
   "source": [
    "## Components"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7df15fad",
   "metadata": {},
   "source": [
    "### GRB Spectrum\n",
    "\n",
    "\n",
    "The GRB intrinsic spectra are power laws (assumed to be synchrotron emission). The luminosity is drawn from a Schecter function and the redshift from a distribution [Cole]()-like shape. The photon index is sampled from a Gaussian. All of these parameters a configurable."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4ad9a7ea",
   "metadata": {},
   "source": [
    "### Host galaxy absorbing column\n",
    "\n",
    "The photons from the GRB first must pass through the local gas in its their host galaxy. The column density can either be simulated as a log-normal or by assuming that GRBs occur in clouds of various ellipsoidal shapes with a distribution of densities. To use the clouds in the simulation, the user specifies the mean and standard deviation of the cloud gas density [cm-3] and the minimum ratio of cloud height to radius ellipsoidal shape (z/R =1 implies a spherical cloud). These shapes are then sampled such that the ratio of the cloud follows a log-uniform distribution from spherical to the minimum ellipsoidal ratio.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "689dfb0c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-28T20:17:42.383946Z",
     "iopub.status.busy": "2021-12-28T20:17:42.383443Z",
     "iopub.status.idle": "2021-12-28T20:17:49.306784Z",
     "shell.execute_reply": "2021-12-28T20:17:49.306267Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m The naima package is not available. Models that depend on it will not be available\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it will not be available.\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m The ebltable package is not available. Models that depend on it will not be available\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[32mINFO    \u001b[0m]\u001b[32m Starting 3ML!\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m no display variable set. using backend for graphics without display (agg)\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m ROOT minimizer not available\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m Multinest minimizer not available\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m PyGMO is not available\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m The cthreeML package is not installed. You will not be able to use plugins which require the C/C++ interface (currently HAWC)\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m Could not import plugin FermiLATLike.py. Do you have the relative instrument software installed and configured?\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m Could not import plugin HAWCLike.py. Do you have the relative instrument software installed and configured?\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m No fermitools installed\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m Env. variable OMP_NUM_THREADS is not set. Please set it to 1 for optimal performances in 3ML\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m Env. variable MKL_NUM_THREADS is not set. Please set it to 1 for optimal performances in 3ML\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m Env. variable NUMEXPR_NUM_THREADS is not set. Please set it to 1 for optimal performances in 3ML\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib.pyplot as plt\n",
    "from jupyterthemes import jtplot\n",
    "\n",
    "jtplot.style(context=\"talk\", fscale=1, ticks=True, grid=False)\n",
    "\n",
    "from whimstan.simulations.cloud import Cloud\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ac121b7b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-28T20:17:49.326127Z",
     "iopub.status.busy": "2021-12-28T20:17:49.317177Z",
     "iopub.status.idle": "2021-12-28T20:17:51.219376Z",
     "shell.execute_reply": "2021-12-28T20:17:51.218540Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 0, 'nH [cm2]')"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "\n",
    "n = 10000\n",
    "\n",
    "for min_zr in [0.01, 0.1, 0.9]:\n",
    "\n",
    "    zr_ratio = np.power(10, np.random.uniform(np.log10(min_zr), 0, size=n))\n",
    "\n",
    "    nh_density = np.random.normal(loc=22.5, scale=0.5, size=n)\n",
    "\n",
    "    # create a cloud with this simulation\n",
    "    clouds = [Cloud(zr_ratio=zr) for zr in zr_ratio]\n",
    "\n",
    "    # sample the latent values for this property\n",
    "\n",
    "    path_length = np.array([cloud.sample() for cloud in clouds])\n",
    "\n",
    "    column_density = np.power(10.0, nh_density) * path_length\n",
    "\n",
    "    bins = np.geomspace(1e19, 1e25, 50)\n",
    "\n",
    "    ax.hist(column_density, bins=bins, histtype=\"step\", lw=1.5, label=f\"z/R={min_zr}\")\n",
    "\n",
    "\n",
    "ax.set_xscale(\"log\")\n",
    "ax.set_yticks([])\n",
    "ax.spines[\"left\"].set_visible(False)\n",
    "ax.legend()\n",
    "ax.set_xlabel(\"nH [cm2]\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6dd303ef",
   "metadata": {},
   "source": [
    "### Milky way absorption\n",
    "\n",
    "The absorption by the local Milky Way gas is computed by looking of the value in the [gdpyc](https://gdpyc.readthedocs.io/en/latest/) map for each GRB's Ra and Dec.\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f27a61bc",
   "metadata": {},
   "source": [
    "### WHIM component\n",
    "Finally, if a WHIM component is included, then the temperature and density of the WHIM are set and each GRB compute the absorbing column along the line of sight for its given redshift.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "84af1ade",
   "metadata": {},
   "source": [
    "## Running the simulation\n",
    "\n",
    "Now that we understand the components that go into the simulation. Let's use popsynth and whimstan to create some data.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "922168d5",
   "metadata": {},
   "source": [
    "### Creating the population\n",
    "\n",
    "First we create the population where we can pass our desired population parameters and place cuts on the GRBs we want to actually simulate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c10f7e52",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-28T20:17:51.225742Z",
     "iopub.status.busy": "2021-12-28T20:17:51.225268Z",
     "iopub.status.idle": "2021-12-28T20:17:51.228317Z",
     "shell.execute_reply": "2021-12-28T20:17:51.227924Z"
    }
   },
   "outputs": [],
   "source": [
    "\n",
    "from whimstan import create_population\n",
    "import popsynth\n",
    "\n",
    "import warnings\n",
    "\n",
    "warnings.simplefilter(\"ignore\")\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "\n",
    "\n",
    "pop_gen = create_population(\n",
    "    r0=10,\n",
    "    z_max=10,\n",
    "    Lmin=1e48,\n",
    "    alpha=1.5,\n",
    "    host_gas_mean=22,\n",
    "    host_gas_sigma=0.5,\n",
    "    host_gas_cloud_ratio=0.1,\n",
    "    use_clouds=True,\n",
    "    vari_clouds=True,\n",
    "    whim_n0=1e-7,\n",
    "    whim_T=1e6,\n",
    "    b_limit=10.0,  # minumum degrees away from galactic center to allow\n",
    "    mw_nh_limit=21.0,  # maximum MW column density allowed\n",
    ")\n",
    "\n",
    "# lets cut with with a flux limit\n",
    "\n",
    "flux_selector = popsynth.HardFluxSelection()\n",
    "\n",
    "flux_selector.boundary = 1e-11\n",
    "\n",
    "\n",
    "pop_gen.set_flux_selection(flux_selector)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4c684822",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-28T20:17:51.236197Z",
     "iopub.status.busy": "2021-12-28T20:17:51.235749Z",
     "iopub.status.idle": "2021-12-28T20:18:20.402537Z",
     "shell.execute_reply": "2021-12-28T20:18:20.401593Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b8c73e168f9f466b8d820c13c5ffcf77",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Drawing distances:   0%|          | 0/88 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b3100c122e8e4e6a89d063342c115d32",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "computing obscured fluxes:   0%|          | 0/88 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "pop_full = pop_gen.draw_survey()\n",
    "pop = pop_full.to_sub_population()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ed5a57dd",
   "metadata": {},
   "source": [
    "Now we have sampled all the parameters that we need for the population. We can have a look at the implications."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d6e37f76",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-28T20:18:20.433469Z",
     "iopub.status.busy": "2021-12-28T20:18:20.406032Z",
     "iopub.status.idle": "2021-12-28T20:18:20.788253Z",
     "shell.execute_reply": "2021-12-28T20:18:20.787824Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAp0AAAIrCAYAAACtRiJWAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/YYfK9AAAACXBIWXMAAAsTAAALEwEAmpwYAABhG0lEQVR4nO3dd5xddZ3/8fe5vU0vKTAhjYQSIAEEQsgEpBkQUBFcCwizoMiK/rDRZJGFRbAhiA01BnfVVX4IP5ZelASQFhh6CGmESU+m317O+f0xySWXmbl3ZjK3zbyej4cPmfM999zPzCSZ93yrYVmWJQAAACCPbMUuAAAAAGMfoRMAAAB5R+gEAABA3hE6AQAAkHeETgAAAOQdoRMAAAB5R+gchubm5mKXAAAAUJYInQAAAMg7QicAAADyjtAJAACAvCN0AgAAIO8InQAAAMg7QicAAADyjtAJAACAvCN0AgAAIO8InQAAAMg7QicAAADyjtAJAACAvCN0AgAAIO8InQAAAMg7QicAAADyzlHsAkpda2urWltbi10GAABAWTMsy7KKXUS5aG5u1vLly4tdBgAAQNlheB0AAAB5R+gEAABA3jGns8gsy1I8FFIsGJSZSMiw2eTy++WuqJDNbi92eQAAAKOC0FlElmUptHOnEuHwB9dMU9HubsXDYVU0Nsrm4FsEAADKH8PrRZQIhzMC557MREKRrq7CFgQAAJAnhM4iigWDWdvj4bBM0yxQNQAAAPlD6CwiM5nMfoNlycp1DwAAQBkgdBaRYcvx5TcMGSwmAgAAYwChs4hcgUDWdqfHwwp2AAAwJhA6i8jt98vudg/YZths8lZXF7YgAACAPCF0FpFhs6misVHuysoPhtENQ06fTxUTJ8ruchW3QAAAgFHCJpBFZths8tXUyFtdLSuVkmGz5Z7rCQAAUGYInSXCMAwZbAQPAADGKLrUAAAAkHeETgAAAOQdoRMAAAB5R+gEAABA3hE6AQAAkHeETgAAAOQdoRMAAAB5R+gEAABA3hE6AQAAkHeETgAAAOQdoRMAAAB5R+gEAABA3hE6AQAAkHeETgAAAOQdoRMAAAB5R+gEAABA3hE6AQAAkHeETgAAAOQdoRMAAAB5R+gEAABA3hE6AQAAkHeETgAAAOSdo9gF5EsqldJNN92knTt3atKkSfrWt74lh2PMfroAAAAlbcz2dD799NOaNGmSbrvtNk2ZMkXLly8vdkkAAADj1pgNnZs2bdLMmTMlSbNmzdJrr71W5IoAAADGr5IInffcc48uvvhinXjiibrpppsy2np6enTNNdfolFNO0TnnnKPHH398SM+cOnWqXnnlFUnSihUr1NvbO+p1AwAAYGhKYpJjfX29zj//fL344ouKxWIZbbfeeqscDofuu+8+rVmzRldccYVmzpypadOmqb29Xddff32/51133XU69thj1draqq9//euaNm2aamtrC/XpAAAA4ENKInQuWrRIkvTOO+9ox44d6euRSETLli3TXXfdJZ/Pp0MPPVQLFizQo48+qksuuUR1dXW6/fbbB33uV7/6VUnSkiVLdPjhh+f3kwAAAMCgSiJ0DqatrU12u11NTU3pazNmzBjS/Mz29nb9x3/8hwzD0BFHHKG5c+fmsVIAAABkU9KhMxKJyO/3Z1wLBAIKh8M5X1tXV6fbbrttRO+7ZMkSLV26dESvBQAAQH8lHTq9Xq9CoVDGtVAoJJ/Pl9f3bWlpUUtLS7/rzc3NeX1fAACAsaokVq8PpqmpSalUSm1tbelra9eu1dSpU4tXFAAAAIatJEJnMplULBaTaZoyTVOxWEzJZFJer1fNzc1asmSJIpGI3njjDT3zzDM69dRTi10yAAAAhsGwLMsqdhEDzaG84IIL1NLSop6eHt18881asWKFKisr9eUvf1knn3xyUepsbm7mZCMAAIARKInQWS4InQAAACNT0guJSkFra6taW1uLXQYAAEBZo6dzGOjpBAAAGJmSWEgEAACAsY3QCQAAgLwjdAIAACDvCJ0AAADIO0InAAAA8o7QCQAAgLxjn84c2KcTAABg77FP5zCwTycAAMDI0NOJEYl0d6t30ya5KypU1dRU7HIAAECJI3RiWCJdXXrp179W2wsvyEwkJEm106dr3gUXaPK8eUWuDgAAlCoWEmHI4qGQHrvySm145pl04JSkjnXr9I//+A9tZu4rAAAYBD2dGLJVDz2knk2bBmwzk0m98vvfy+HxyLDZVDtjhuwO/ngBAIA+pAIM2XtPPz3gdcuyFOvp0XtPP62d774ru9MpT3W1Zp9xhg4999wCVwkAAEoRw+sYskQoNOD1SEeHol1dslIpWaYpSYp2dem1//ovvfSb3xSyRAAAUKLo6cyBfTo/ULnPPgpt355xLRmP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vCN0AgAAIO8InQAAAMg7QicAAADyjtAJAACAvCN0AgAAIO8InQAAAMg7QicAAADyjtAJAACAvCN0AgAAIO8InQAAAMg7QicAAADyjtAJAACAvCN0AgAAIO8InQAAAMg7QicAAADyjtAJAACAvCN0AgAAIO8InQAAAMg7QicAAADyzlHsAgAA45dlmoqHwzKTSRk2m1w+n2wOfjQBYxF/swEARREPhxVub5dlmulrka4ueSor5a2uLl5hAPKC0AkAKLhUPK7Qzp2SZWU2WJai3d2yORxyBwLFKW6I4uGw4qGQzERCht0ul98vl98vwzCKXRpQkgidAICCi/b29g+ce7b39JRsgLMsS+GODsWDwQ8uJhJKRqOKh0IKNDaWZN1AsbGQCABQcMloNGu7mUjITCYLVM3wxEOhzMC5h2Q0qmh3d4ErAsoDoRMAgGEYLHDuFgsGZWXpxQXGK0InAKDgHB5P1nab01myq9hTiUTWdiuVkpVKFagaoHyU5t/oEtbc3FzsEgAAAIpq+fLlw34NoXOYRvJFRmlqbm7m+zmG8P0cW/h+ji18P8eWkXbAMbwOAACAvCN0AgAAIO8InQAAAMg7QicAAADyjtA5DBdccEGxS8Ao4vs5tvD9HFv4fo4tfD/HlpF+Pw2LHWwBAACQZ/R0AgAAIO8InQAAAMg7QicAAADyjtAJAACAvCN0AgAAIO8InQAAAMg7QicAAADyjtAJAACAvCN0DkFPT4+uueYanXLKKTrnnHP0+OOPF7skjFA8HtfNN9+sc845R6eeeqpaWlr0/PPPF7ssjIK2tjaddNJJuuGGG4pdCvbSk08+qS984Qs65ZRT9C//8i967bXXil0SRmjLli369re/rdNOO02f+MQndOuttyqZTBa7LAzRPffco4svvlgnnniibrrppoy2l19+WV/4whd08skn6+tf/7q2bt2a83mEziG49dZb5XA4dN999+naa6/VT37yE61fv77YZWEEUqmUGhsbdfvtt+vhhx/WRRddpOuuu05btmwpdmnYS7feeqsOOOCAYpeBvfTSSy/pV7/6la666io98sgj+tnPfqbJkycXuyyM0E9+8hPV1NTo3nvv1e9+9zu9+uqruu+++4pdFoaovr5e559/vk477bSM611dXfrud7+rf/3Xf9UDDzyg2bNn63vf+17O5xE6c4hEIlq2bJkuuugi+Xw+HXrooVqwYIEeffTRYpeGEfB6vWppadGkSZNks9l07LHHatKkSVq1alWxS8NeePLJJ1VRUaHDDz+82KVgLy1ZskRf/OIXdfDBB8tms6mhoUENDQ3FLgsjtGXLFp1wwglyu92qq6vT0UcfTadNGVm0aJEWLlyoysrKjOvLly/X1KlT09/bCy+8UGvWrNGGDRuyPo/QmUNbW5vsdruamprS12bMmKH33nuveEVh1HR0dGjjxo2aNm1asUvBCIVCIf3ud7/Tv/3bvxW7FOylVCqlVatWqaurS5/97Gd19tln69Zbb1UsFit2aRihc845R3//+98VjUa1Y8cOvfDCCzr66KOLXRb20vr16zVz5sz0x16vV/vss0/OXygInTlEIhH5/f6Ma4FAQOFwuEgVYbQkk0ndcMMNOvXUU7XffvsVuxyM0G9/+1udfvrpamxsLHYp2EudnZ1KJpNatmyZfvazn+l3v/udVq9erT/84Q/FLg0jdNhhh2n9+vVavHixzj77bM2ePVsLFy4sdlnYSwNlI7/fr0gkkvV1hM4cvF6vQqFQxrVQKCSfz1ekijAaTNPUjTfeKIfDocsvv7zY5WCEVq9erZdfflnnnntusUvBKHC73ZKkT33qU6qvr1d1dbXOPfdcFvuVKdM09e1vf1vNzc169NFH9b//+7/q7e3Vr371q2KXhr3k9Xr7db6FQiF5vd6sryN05tDU1KRUKqW2trb0tbVr12rq1KnFKwp7xbIs3XLLLers7EwHT5Sn1tZWbd26Veecc44+8YlP6C9/+YuWLVumf/3Xfy12aRiBiooKNTQ0yDCM9LU9/xvlpaenR9u2bdOnPvUpuVwuVVVV6bTTTuOXiDFg2rRpWrNmTfrjSCSizZs355yqRujMwev1qrm5WUuWLFEkEtEbb7yhZ555RqeeemqxS8MI/fjHP9aGDRv0/e9/P92zgvJ05pln6s9//rN+97vf6Xe/+53OPPNMzZ8/Xz/+8Y+LXRpG6LTTTtPf/vY3dXZ2qre3V3fffbfmz59f7LIwAtXV1Zo0aZLuu+8+JZNJ9fb26pFHHtGMGTOKXRqGKJlMKhaLyTRNmaapWCymZDKp5uZmrV+/Xk899ZRisZiWLl2qGTNm5JyqZliWZRWo9rLV09Ojm2++WStWrFBlZaW+/OUv6+STTy52WRiBrVu36txzz5XL5ZLdbk9f/+Y3v6lTTjmliJVhNCxZskSbNm3StddeW+xSMELJZFK33367nnjiCblcLp1wwgm65JJL+AWxTK1evVo/+9nPtGbNGtntdh1++OH6+te/rtra2mKXhiFYsmSJli5dmnHtggsuUEtLi1asWKGf/vSn2rp1qw466CBdddVVmjRpUtbnEToBAACQdwyvAwAAIO8InQAAAMg7QicAAADyjtAJAACAvCN0AgAAIO8InQAAAMg7QicAjLIrrrhCN910kyTpa1/7mm699dYiVwQAxcf5fwCQR8M5anXJkiVatmyZ7rrrrjxXBQCFR+gEgDyqrKwsdgkAUBIInQCwF6LRqH7yk59o2bJl8ng8+vSnP53R/rWvfU3Tpk3T5ZdfLklatmyZfv/732vjxo1yu92aPn26rr/+er3wwgvp4+aam5slSVdddZUWL16sv/zlL3r44Ye1efNmBQIBHX300br00ktVUVEhSXr44Yf105/+VDfddJNuv/12bdmyRQceeKCuuOIKTZ48OV3Lc889p6VLl2rt2rXyeDyaM2eOrr/+erndbiUSCf32t7/VE088oZ6eHk2bNk0XXXSRjjrqqAJ8FQGMB4ROANgLv/jFL7RixQrdcMMNqq+v19KlS/Xaa6+lg+Oe2tvbdf311+tLX/qSFi1apEgkorfffluS9NGPflTr1q3Tc889p9tuu02SFAgEJEmGYeiyyy7T5MmTtW3bNv30pz/Vbbfdpu9+97vpZ8fjcf33f/+3rrjiCrndbt1000368Y9/rB//+MeSpBdeeEFXX321Pve5z+mqq65SKpXSiy++qN0nIX//+9/X5s2bde2116qxsVHPPfecrrzySt15552aOXNmXr+GAMYHQicAjFA4HNaDDz6oK664It0jeOWVV/br7dxt586dSiaTOv744zVx4kRJ0vTp09PtXq9XdrtddXV1Ga8799xz0/89adIkfeUrX9HVV1+tq6++WjZb33rQVCqlyy+/XFOmTJEkfeYzn9Ett9wiy7JkGIbuuusuLVq0SBdffHH6WTNmzJAkbdq0SU8++aT++te/asKECZKks88+Wy+//LLuv/9+feMb39irrxMASIROABixzZs3K5FIaM6cOelrPp8vI0juaebMmTryyCP1xS9+UR/5yEd05JFH6vjjj1d1dXXW93n55Zf1xz/+URs2bFAwGJRpmkokEuro6FB9fb0kyeVypQOnJNXX1yuRSKi3t1eVlZVavXq1Fi9ePODz3333XVmWpfPPPz/jejwe1+GHHz6ULwUA5EToBIACsdvt+vGPf6y33npLL730kh588EHdeeeduv322wcdwt66dauuuOIKnXHGGWppaVFVVZXeffddXX/99UokEhnP3pNhGJIk0zRz1mWapgzD0K9//et+K+3dbvdwP00AGBD7dALACE2ePFkOh0NvvfVW+lokEtG6desGfY1hGJozZ44uvPBC3Xnnnaqrq9Pf//53SZLT6VQqlcq4/5133lEymdRXv/pVzZkzR01NTdq5c+ewa91///318ssvD9g2a9YsWZaljo4O7bvvvhn/a2hoGPZ7AcBACJ0AMEI+n0+nn366fvWrX+mll17S+vXrdfPNNw/au/jWW2/prrvu0sqVK7Vt2zY988wz2r59u6ZOnSpJmjhxorZt26ZVq1apq6tL8XhcTU1NMk1Td999tzZv3qwnnnhCd99997BrPe+88/TUU0/pN7/5jd577z2tX79ef/3rXxWNRtXU1KSTTz5Z3//+9/XUU09p8+bNeuedd/TnP/9Zy5Yt25svEQCkMbwOAHvh0ksvVTQa1Xe/+1253W6dffbZikajA97r9/v15ptv6m9/+5uCwaAaGxv1xS9+UaeccookadGiRVq+fLkuv/xyBYPB9JZJX/va1/SnP/1Jv/3tbzVnzhxdeuml+t73vjesOufPn68bb7xRS5cu1f/8z//I5/Pp4IMP1llnnSWpb3umP/zhD/rlL3+pHTt2qLKyUgcccABzOgGMGsPavV8GAAAAkCcMrwMAACDvCJ0AAADIO0InAAAA8o7QCQAAgLwjdAIAACDvCJ0AAADIO0InAAAA8o7QCQAAgLwjdAIAACDv/j9fj5rj7Lb2kAAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 748.8x655.2 with 1 Axes>"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pop_full.display_fluxes()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "905ff50e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-28T20:18:20.803519Z",
     "iopub.status.busy": "2021-12-28T20:18:20.801285Z",
     "iopub.status.idle": "2021-12-28T20:18:20.908609Z",
     "shell.execute_reply": "2021-12-28T20:18:20.908985Z"
    }
   },
   "outputs": [],
   "source": [
    "pop_full.display_distances()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "86706fc7",
   "metadata": {},
   "source": [
    "### Creating the spectra and its database\n",
    "\n",
    "We now want to generate observations from Swift-XRT. While we can generate FITS files for each observation. This is a rather bloated file format, so we can store all the data directly to an HDF5 file which can easily translate this data into 3ML plugins as needed. First we load up the spectrum factory."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "e1ac49bb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-28T20:18:20.912516Z",
     "iopub.status.busy": "2021-12-28T20:18:20.912069Z",
     "iopub.status.idle": "2021-12-28T20:18:20.914658Z",
     "shell.execute_reply": "2021-12-28T20:18:20.915038Z"
    }
   },
   "outputs": [],
   "source": [
    "from whimstan import SpectrumFactory"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "5c3c2a0f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-28T20:18:20.922420Z",
     "iopub.status.busy": "2021-12-28T20:18:20.917730Z",
     "iopub.status.idle": "2021-12-28T20:19:44.789561Z",
     "shell.execute_reply": "2021-12-28T20:19:44.790065Z"
    },
    "lines_to_next_cell": 2
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "b13bee7db5ec475191cb85de84eb8203",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Calculating the simulated datasets:   0%|          | 0/44 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m The naima package is not available. Models that depend on it will not be available\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it will not be available.\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m The naima package is not available. Models that depend on it will not be available\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m The GSL library or the pygsl wrapper cannot be loaded. Models that depend on it will not be available.\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m The ebltable package is not available. Models that depend on it will not be available\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m The ebltable package is not available. Models that depend on it will not be available\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[32mINFO    \u001b[0m]\u001b[32m Starting 3ML!\u001b[0m\n",
      "[\u001b[32mINFO    \u001b[0m]\u001b[32m Starting 3ML!\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m no display variable set. using backend for graphics without display (agg)\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m no display variable set. using backend for graphics without display (agg)\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m ROOT minimizer not available\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m ROOT minimizer not available\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m Multinest minimizer not available\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m Multinest minimizer not available\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m PyGMO is not available\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m PyGMO is not available\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m The cthreeML package is not installed. You will not be able to use plugins which require the C/C++ interface (currently HAWC)\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m The cthreeML package is not installed. You will not be able to use plugins which require the C/C++ interface (currently HAWC)\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m Could not import plugin FermiLATLike.py. Do you have the relative instrument software installed and configured?\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m Could not import plugin FermiLATLike.py. Do you have the relative instrument software installed and configured?\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m Could not import plugin HAWCLike.py. Do you have the relative instrument software installed and configured?\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m Could not import plugin HAWCLike.py. Do you have the relative instrument software installed and configured?\u001b[0m\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m No fermitools installed\u001b[0m\n",
      "[\u001b[35mWARNING \u001b[0m]\u001b[35m No fermitools installed\u001b[0m\n"
     ]
    }
   ],
   "source": [
    "spec_fac = SpectrumFactory(pop, whim_n0=1e-7, whim_T=1e6, n_jobs=2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d9fca851",
   "metadata": {},
   "source": [
    "Now we can write this to a file."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "af435be4",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-12-28T20:19:44.793587Z",
     "iopub.status.busy": "2021-12-28T20:19:44.792998Z",
     "iopub.status.idle": "2021-12-28T20:20:11.310804Z",
     "shell.execute_reply": "2021-12-28T20:20:11.310322Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "a18711dbddb84bb5a9f7741d689bc7aa",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "Reading GRBs:   0%|          | 0/44 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "spec_fac.create_database(\"data.h5\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cb32dd13",
   "metadata": {},
   "source": [
    "To see how we can work with a database, have a look at the [Working with data]() section.\n"
   ]
  }
 ],
 "metadata": {
  "jupytext": {
   "formats": "ipynb,md"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.9"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "00e2796e4cc1463cbf837639a24afc12": {
      "model_module": "jupyter-vue",
      "model_module_version": "^1.7.0",
      "model_name": "ForceLoadModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "jupyter-vue",
       "_model_module_version": "^1.7.0",
       "_model_name": "ForceLoadModel",
       "_view_count": null,
       "_view_module": null,
       "_view_module_version": "",
       "_view_name": null,
       "layout": "IPY_MODEL_4fabef470a184a4fb50cfc6ee9767c19"
      }
     },
     "03e7cbf542484480b77f38cfd3962e14": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_03fecf4d64304dfc9f7dcd7cdcdf1dd8",
       "placeholder": "​",
       "style": "IPY_MODEL_523fb9612e8c4612950cc09da7d6b100",
       "value": " 44/44 [01:18&lt;00:00,  1.65s/it]"
      }
     },
     "03fecf4d64304dfc9f7dcd7cdcdf1dd8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "067dabf0249c4f02836c7ab0802a536e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1ec5a99a1c65437ca3db0f79f32ab4d3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2720fcf141e946e8abc757c8c2660609": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_3255e6ba4b544a44884c29126a8756e8",
       "placeholder": "​",
       "style": "IPY_MODEL_4e3ca1b8569c44e89b021f7961c4f819",
       "value": "Calculating the simulated datasets: 100%"
      }
     },
     "2d5088cecc434114a8af1a79494765d7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": "#B833FF",
       "description_width": ""
      }
     },
     "30b8c22f1d354cd58e87c74a8a548a7a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": "#33F0B4",
       "description_width": ""
      }
     },
     "3255e6ba4b544a44884c29126a8756e8": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3b7a42c797d6406d9f5f0df9b5f2b631": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_067dabf0249c4f02836c7ab0802a536e",
       "placeholder": "​",
       "style": "IPY_MODEL_9452481896004af0b6abbc13b4752b66",
       "value": "computing obscured fluxes: 100%"
      }
     },
     "3ce38f1388f74cc6906cb755cff3ba61": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": "#B833FF",
       "description_width": ""
      }
     },
     "46acc7c448cd4c9388b44ca18c100c38": {
      "model_module": "jupyter-vuetify",
      "model_module_version": "^1.8.1",
      "model_name": "ThemeModel",
      "state": {
       "_model_module": "jupyter-vuetify",
       "_model_module_version": "^1.8.1",
       "_model_name": "ThemeModel",
       "_view_count": null,
       "_view_module": null,
       "_view_module_version": "^1.8.1",
       "_view_name": null,
       "dark": null
      }
     },
     "471bce4d7d364783aae86ca7d3b52fdd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4ab1dff070f24d768f557a65e0caaa06": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4bb38874d89e45fe885ad5ee827fe9aa": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4e3ca1b8569c44e89b021f7961c4f819": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "4fabef470a184a4fb50cfc6ee9767c19": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "523fb9612e8c4612950cc09da7d6b100": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "56603b857b5f42dcbb53202f3f03edae": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "5683e52bb6b147f992de308e40796c8e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_471bce4d7d364783aae86ca7d3b52fdd",
       "placeholder": "​",
       "style": "IPY_MODEL_59d52523551e418695e5a2623ebd3f1a",
       "value": " 44/44 [00:17&lt;00:00,  2.55it/s]"
      }
     },
     "59d52523551e418695e5a2623ebd3f1a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "5b0ed362c9e74651a4880983abd7fcea": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "630d2751300444f3a00a588885a30c10": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "6ab45f3b611a4b74ba404c02f6e8ac73": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_5b0ed362c9e74651a4880983abd7fcea",
       "placeholder": "​",
       "style": "IPY_MODEL_8e7fcf7857f749b0ab1dc17ec149808e",
       "value": " 88/88 [00:00&lt;00:00, 3452.88it/s]"
      }
     },
     "72f689bcb24d4ff49a7b6fa0ae10aa5d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "750a8148553b42f88328858bd84a07ad": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_78efb517fc0a4de2a23f2efc7d32e5b6",
       "max": 44.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_2d5088cecc434114a8af1a79494765d7",
       "value": 44.0
      }
     },
     "78efb517fc0a4de2a23f2efc7d32e5b6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8d2465ae57f047a88f3bee2ccd8cc9ff": {
      "model_module": "jupyter-vuetify",
      "model_module_version": "^1.8.1",
      "model_name": "ThemeColorsModel",
      "state": {
       "_model_module": "jupyter-vuetify",
       "_model_module_version": "^1.8.1",
       "_model_name": "ThemeColorsModel",
       "_theme_name": "light",
       "_view_count": null,
       "_view_module": null,
       "_view_module_version": "^1.8.1",
       "_view_name": null,
       "accent": "#82B1FF",
       "anchor": null,
       "error": "#FF5252",
       "info": "#2196F3",
       "primary": "#1976D2",
       "secondary": "#424242",
       "success": "#4CAF50",
       "warning": "#FB8C00"
      }
     },
     "8e7fcf7857f749b0ab1dc17ec149808e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "93261fdb26d94848aa4f1c375375db6e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9452481896004af0b6abbc13b4752b66": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "97651ff7269f412697faa293d4a18165": {
      "model_module": "jupyter-vuetify",
      "model_module_version": "^1.8.1",
      "model_name": "ThemeColorsModel",
      "state": {
       "_model_module": "jupyter-vuetify",
       "_model_module_version": "^1.8.1",
       "_model_name": "ThemeColorsModel",
       "_theme_name": "dark",
       "_view_count": null,
       "_view_module": null,
       "_view_module_version": "^1.8.1",
       "_view_name": null,
       "accent": "#FF4081",
       "anchor": null,
       "error": "#FF5252",
       "info": "#2196F3",
       "primary": "#2196F3",
       "secondary": "#424242",
       "success": "#4CAF50",
       "warning": "#FB8C00"
      }
     },
     "995a49dab1cd42948e8cf8f9d17db434": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9ace1eeba4a3487c8ec1c8a17ee64626": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9e51065d889a499bbbfa50f230ed0916": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a18711dbddb84bb5a9f7741d689bc7aa": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_e8a6e02513c64101947e75bf8a88f57f",
        "IPY_MODEL_aeee06a25c82425e997abf15d50a5892",
        "IPY_MODEL_5683e52bb6b147f992de308e40796c8e"
       ],
       "layout": "IPY_MODEL_4bb38874d89e45fe885ad5ee827fe9aa"
      }
     },
     "a58e157d372240db9f8f83adfaa74d28": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_e51edffa647347e0afe224d76f0d68fd",
       "max": 88.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_3ce38f1388f74cc6906cb755cff3ba61",
       "value": 88.0
      }
     },
     "a8ee6ec29c3948f7a1922a916a3765d8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_4ab1dff070f24d768f557a65e0caaa06",
       "placeholder": "​",
       "style": "IPY_MODEL_e048e3129a204b70a0c7025b1a35a9b8",
       "value": " 88/88 [00:24&lt;00:00,  3.94it/s]"
      }
     },
     "aeee06a25c82425e997abf15d50a5892": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_72f689bcb24d4ff49a7b6fa0ae10aa5d",
       "max": 44.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_30b8c22f1d354cd58e87c74a8a548a7a",
       "value": 44.0
      }
     },
     "b13bee7db5ec475191cb85de84eb8203": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2720fcf141e946e8abc757c8c2660609",
        "IPY_MODEL_750a8148553b42f88328858bd84a07ad",
        "IPY_MODEL_03e7cbf542484480b77f38cfd3962e14"
       ],
       "layout": "IPY_MODEL_1ec5a99a1c65437ca3db0f79f32ab4d3"
      }
     },
     "b3100c122e8e4e6a89d063342c115d32": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_3b7a42c797d6406d9f5f0df9b5f2b631",
        "IPY_MODEL_a58e157d372240db9f8f83adfaa74d28",
        "IPY_MODEL_a8ee6ec29c3948f7a1922a916a3765d8"
       ],
       "layout": "IPY_MODEL_995a49dab1cd42948e8cf8f9d17db434"
      }
     },
     "b8c73e168f9f466b8d820c13c5ffcf77": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_c683d8f380a44f2ab1811f63bb0059b0",
        "IPY_MODEL_e180991692e9425cb38f0f131f4a431f",
        "IPY_MODEL_6ab45f3b611a4b74ba404c02f6e8ac73"
       ],
       "layout": "IPY_MODEL_9ace1eeba4a3487c8ec1c8a17ee64626"
      }
     },
     "c683d8f380a44f2ab1811f63bb0059b0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_93261fdb26d94848aa4f1c375375db6e",
       "placeholder": "​",
       "style": "IPY_MODEL_630d2751300444f3a00a588885a30c10",
       "value": "Drawing distances: 100%"
      }
     },
     "c7caf8907c094ae39afb2eabe0176218": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "bar_color": "#B833FF",
       "description_width": ""
      }
     },
     "e048e3129a204b70a0c7025b1a35a9b8": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "DescriptionStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "DescriptionStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "StyleView",
       "description_width": ""
      }
     },
     "e180991692e9425cb38f0f131f4a431f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_9e51065d889a499bbbfa50f230ed0916",
       "max": 88.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_c7caf8907c094ae39afb2eabe0176218",
       "value": 88.0
      }
     },
     "e51edffa647347e0afe224d76f0d68fd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e542f83fb73d41b69bfc94f6d3f6b1ac": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "1.2.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "1.2.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "1.2.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "overflow_x": null,
       "overflow_y": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e8a6e02513c64101947e75bf8a88f57f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "1.5.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "1.5.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "1.5.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_tooltip": null,
       "layout": "IPY_MODEL_e542f83fb73d41b69bfc94f6d3f6b1ac",
       "placeholder": "​",
       "style": "IPY_MODEL_56603b857b5f42dcbb53202f3f03edae",
       "value": "Reading GRBs: 100%"
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
